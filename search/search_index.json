{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"English \u2003 Fran\u00e7ais","title":"Home"},{"location":"code/","text":"Fran\u00e7ais Code Repository The cffdrs-ng GitHub repository contains the up-to-date code for the CFFDRS2025 modules in three programming languages: R, C, and Python. All three languages contain the same equations and perform the same tasks, the choice is yours depending on your system requirements. Fire Weather Index 2025 The Canadian Forest Fire Weather Index (FWI) is a major subsystem of the CFFDRS. FWI2025 is the next generation FWI system corresponding to the CFFDRS2025. The following describes the files, data inputs, parameters, and outputs in a general way for all three languages, noting the variations for specific languages. Scripts Each programming language has three scripts that are required to generate FWI2025 outputs: \"NG_FWI\" holds the functions and equations for generating FWI2025 outputs. R: NG_FWI.r Python: NG_FWI.py C: NG_FWI.c \"util\" includes basic functions that are not part of FWI2025 equations, but generate intermediate information for the calculation of the FWI2025 components (e.g. time of sunrise and sunset, number of sunlight hours). R: util.r Python: util.py C: util.c , util.h \"daily_summaries\" includes the process to generate the daily summary output. R: daily_summaries.r Python: daily_summaries.py C: ( in development ) Packages The FWI2025 scripts require different sets of language-specific libraries or packages. These must be installed prior to running \"NG_FWI\". R: lubridate and data.table Python: datetime, logging, math, numpy, pandas, os.path, sys C: stdlib.h, stdbool.h, string.h Get Started The cffdrs-ng GitHub repository also includes a tutorial script and test data. See the Tutorials#Hourly FWI for a step-by-step workflow with hourly data. The documentation below goes into details about specific functions and data requirements. Format FWI2025 code is written for and tested using input data in the form of a table/array, commonly imported as comma-separated value (.csv) files. Outputs are then also of the same table/array form. Users can configure the input and output file types to fit their individual data streams. Documentation Hourly Fire Weather Index The hFWI() function in the \"NG_FWI\" file is built to generate FWI System outputs one station at a time. The R and Python versions can also output multiple stations with a properly formatted input. The C version can only handle inputs of a single year for a given station. Input Data The Fire Weather Index System was originally designed to be calculated using data recorded at local weather stations . As a result, descriptions below reference weather station data as input. In reality, any collected or calculated weather data (e.g. gridded data, forecast data, etc.) that includes the standard variables required as input to the FWI System can be used. See the Weather Guide for a description of weather data input standards for the FWI System. The rows of the dataframe should correspond to consecutive hourly data. The columns and data types of the input dataframe are as follows: Column Description id Weather station identifier, a unique number for the station, text or number lat Latitude of weather station, decimal degrees (\u00b0) (double precision) long Longitude of weather station, decimal degrees (\u00b0) (double precision) yr Year of weather station reading, number YYYY mon Month of weather station reading, number M or MM (must be consistent throughout the dataset) day Day of weather station reading, number DD or D (must be consistent throughout the dataset) hr Hour of weather station reading, number in military time (0-23) temp Temperature in degrees Celsius (\u00b0C), number rh Relative humidity in percent (%), number (0-100) ws Wind speed in kilometres per hour (km/hr), number prec Precipitation (rain) measured in millimetres (mm), number solrad Solar Radiation measured in kilowatts per square metre (kW/m^2) for grassland codes, number. OPTIONAL input, FWI2025 will generate based on default method. ( CFFDRS2025 Solar Radiation Input (Draft) \ud83d\udce5) percent_cured Percent Cured of grasses in open grassland, measured in percent for grassland codes, number (0-100). OPTIONAL input, FWI2025 will generate based on default method The column headers can be lower case or upper case, the output format is set to upper case. In addition to the weather variables, the function to generate hourly FWI2025 outputs requires the timezone where the weather station is located and the start-up value for the moisture codes (e.g. FFMC of 85, DMC of 6 and DC of 15). See the next section below to see where it is specified. Function Parameters R: hFWI(df_wx, timezone, ffmc_old = 85, dmc_old = 6, dc_old = 15) Parameter Description df_wx Data frame or formatted table (can have multiple years and stations, needs to be temporally sequential during a given year) timezone Timezone in which the weather station is located as the number of offset hours from UTC (e.g. for stations in Central Standard time the timezone is set to -6) ffmc_old dmc_old The start-up value of the duff moisture code (e.g. 6, this is the default) dc_old The start-up value of the drought code (e.g. 15, this is the default) Python: hFWI(df_wx, ffmc_old = 85, dmc_old = 6, dc_old = 15, silent = False) Parameter Description df_wx Data frame or formatted table (can have multiple years and stations, needs to be temporally sequential during a given year) timezone Timezone in which the weather station is located ffmc_old The startup value of the fine fuel moisture code (e.g. 85, this is the default) dmc_old The start-up value of the duff moisture code (e.g. 6, this is the default) dc_old The start-up value of the drought code (e.g. 15, this is the default) silent Print progress messages to monitor script. True or False, False by default C: The C version can be run from command line with the following arguments in order: Code Description local GMToffset Timezone in which the weather station is located starting FFMC The startup value of the fine fuel moisture code (e.g. 85) starting DMC The start-up value of the duff moisture code (e.g. 6) starting DC The start-up value of the drought code (e.g. 15) input file Name of .csv file containing data for a single station over the course of a year output file Name of the file to output results into Output Description The output is also the same format as the input data, with the following columns appended: Column Description timestamp Date and time of weather and FWI variable. Timestamp YYYY-MM-DD HH:MM:SS. (not in C) date YYYY-MM-DD Date type (without hh:mm:ss). (not in C) sunrise Time of sunrise based on the latitude, longitude, and date in military time (decimal time). (not in C) sunset Time of sunset based on the latitude, longitude, and date in military time (decimal time). (not in C) sunlight_hours Number of hours (hr) between sunrise and sunset (decimal time). (not in C) solrad Solar Radiation measured in kilowatts per square metre (kW/m^2) for grassland codes, generated automatically if missing from input (number). (needs to be calculated using make_inputs.c if not given) percent_cured Percent of cured (dead) grass fuels in grasslands, generated automatically if missing from input. Used exclusively in the Grassland calculations. Percentage as number (0-100). (needs to be calculated using make_inputs.c if not given) grass_fuel_load The standard grass fuel load is built into the Python and R code, 0.35 kg/m^2. (needs to be calculated using make_inputs.c if not given, generates a column with the standard value) ffmc Fine Fuel Moisture Code (number) dmc Duff Moisture Code (number) dc Drought Code (number) isi Initial Spread Index (number) bui Buildup Index (number) fwi Fire Weather Index (number) dsr Daily Severity Rating (number) gfmc Grass Fuel Moisture Code, 0-101 similar to FFMC (number) gsi Grassland Spread Index (number) gfwi Grassland Fire Weather Index (number) Daily Summaries The hourly FWI output can be summarized in a variety of ways depending on usage and requirements. These can be found within the \"daily_summaries\" script. generate_daily_summaries() boils down the hourly data into some daily metrics. Input Data The only input to generate_daily_summaries() is the output from hFWI() . Function Parameters R: generate_daily_summaries <- function(hourly_data) {} Python: def generate_daily_summaries(hourly_data): C: hourly_data = the output dataframe generated by NG_FWI Output Description Parameter Description wstnid Weather station ID, or unique identifier for the weather station year Year, YYYY, number (e.g. 2024) mon Month, M, number (e.g. 3) day Day, D number (e.g. 8) sunrise Time of sunrise. HH:MM:SS timestamp format in military time (e.g. 06:30:55) sunset Time of sunset. HH:MM:SS timestamp format in military time (e.g. 19:45:05) peak_time The hour (hr) in military time (0-23), number format. The hour where one might expect maximum fire behaviour as expressed by a modified ISI (see definitions of wind_speed_smoothed and peak_isi_smoothed below). If the peak ISI (from peak_isi_smoothed field) is less than five, the peak_time is set to 17:00 hours duration Number of hours (hr), number format. Can also be called duration of a burning window, number of hours in the day where one could expect an active fire (where a modified ISI is equal or greater than five). If the ISI did not reach 5 or greater, the duration is zero wind_speed_smoothed Wind Speed in kilometres per hour (km/hr), double precision. Hourly wind speed recorded based on a 10 min average can be noisy hour-to-hour, this makes it difficult to estimate the duration of a burning window. To estimate the duration of a burning window and peak time, the hourly windspeed is smoothed and the ISI is recalculated based on the smoothed wind speed and FFMC peak_isi_smoothed Maximum Initial Spread Index (ISI) recalculated based on FFMC and smoothed wind speed from \u2018wind_speed_smoothed\u2019, double precision number. Number, double precision ffmc Fine Fuel Moisture Code corresponding to the FFMC at the hour of peak time. Number, double precision dmc Duff Moisture Code corresponding to the DMC at the hour of peak. Number, double precision dc Drought Code corresponding to the DC at the hour of peak time. Number, double precision isi Initial Spread Index corresponding to the ISI at the hour of peak time. Number, double precision bui Buildup Index corresponding to the BUI at the hour of peak time. Number, double precision fwi Fire Weather Index corresponding to the FWI at the hour of peak time. Number, double precision dsr Daily Severity Rating corresponding to the DSR at the hour of peak time. Number, double precision gfmc Grass Fuel Moisture Code corresponding to the GFMC at the hour of peak time. Number, double precision gsi Grassland Spread Index corresponding to the GSI at the hour of peak time. Number, double precision gfwi Grassland Fire Weather Index corresponding to the GFWI at the hour of peak time. Number, double precision License The NG-CFFDRS scripts are licensed under the GNU General Public License version 2. A copy of the license is available at https://github.com/nrcan-cfs-fire/cffdrs-ng?tab=GPL-2.0-1-ov-file#readme","title":"Code"},{"location":"code/#code","text":"","title":"Code"},{"location":"code/#repository","text":"The cffdrs-ng GitHub repository contains the up-to-date code for the CFFDRS2025 modules in three programming languages: R, C, and Python. All three languages contain the same equations and perform the same tasks, the choice is yours depending on your system requirements.","title":"Repository"},{"location":"code/#fire-weather-index-2025","text":"The Canadian Forest Fire Weather Index (FWI) is a major subsystem of the CFFDRS. FWI2025 is the next generation FWI system corresponding to the CFFDRS2025. The following describes the files, data inputs, parameters, and outputs in a general way for all three languages, noting the variations for specific languages.","title":"Fire Weather Index 2025"},{"location":"code/#scripts","text":"Each programming language has three scripts that are required to generate FWI2025 outputs: \"NG_FWI\" holds the functions and equations for generating FWI2025 outputs. R: NG_FWI.r Python: NG_FWI.py C: NG_FWI.c \"util\" includes basic functions that are not part of FWI2025 equations, but generate intermediate information for the calculation of the FWI2025 components (e.g. time of sunrise and sunset, number of sunlight hours). R: util.r Python: util.py C: util.c , util.h \"daily_summaries\" includes the process to generate the daily summary output. R: daily_summaries.r Python: daily_summaries.py C: ( in development )","title":"Scripts"},{"location":"code/#packages","text":"The FWI2025 scripts require different sets of language-specific libraries or packages. These must be installed prior to running \"NG_FWI\". R: lubridate and data.table Python: datetime, logging, math, numpy, pandas, os.path, sys C: stdlib.h, stdbool.h, string.h","title":"Packages"},{"location":"code/#get-started","text":"The cffdrs-ng GitHub repository also includes a tutorial script and test data. See the Tutorials#Hourly FWI for a step-by-step workflow with hourly data. The documentation below goes into details about specific functions and data requirements.","title":"Get Started"},{"location":"code/#format","text":"FWI2025 code is written for and tested using input data in the form of a table/array, commonly imported as comma-separated value (.csv) files. Outputs are then also of the same table/array form. Users can configure the input and output file types to fit their individual data streams.","title":"Format"},{"location":"code/#documentation","text":"","title":"Documentation"},{"location":"code/#hourly-fire-weather-index","text":"The hFWI() function in the \"NG_FWI\" file is built to generate FWI System outputs one station at a time. The R and Python versions can also output multiple stations with a properly formatted input. The C version can only handle inputs of a single year for a given station.","title":"Hourly Fire Weather Index"},{"location":"code/#input-data","text":"The Fire Weather Index System was originally designed to be calculated using data recorded at local weather stations . As a result, descriptions below reference weather station data as input. In reality, any collected or calculated weather data (e.g. gridded data, forecast data, etc.) that includes the standard variables required as input to the FWI System can be used. See the Weather Guide for a description of weather data input standards for the FWI System. The rows of the dataframe should correspond to consecutive hourly data. The columns and data types of the input dataframe are as follows: Column Description id Weather station identifier, a unique number for the station, text or number lat Latitude of weather station, decimal degrees (\u00b0) (double precision) long Longitude of weather station, decimal degrees (\u00b0) (double precision) yr Year of weather station reading, number YYYY mon Month of weather station reading, number M or MM (must be consistent throughout the dataset) day Day of weather station reading, number DD or D (must be consistent throughout the dataset) hr Hour of weather station reading, number in military time (0-23) temp Temperature in degrees Celsius (\u00b0C), number rh Relative humidity in percent (%), number (0-100) ws Wind speed in kilometres per hour (km/hr), number prec Precipitation (rain) measured in millimetres (mm), number solrad Solar Radiation measured in kilowatts per square metre (kW/m^2) for grassland codes, number. OPTIONAL input, FWI2025 will generate based on default method. ( CFFDRS2025 Solar Radiation Input (Draft) \ud83d\udce5) percent_cured Percent Cured of grasses in open grassland, measured in percent for grassland codes, number (0-100). OPTIONAL input, FWI2025 will generate based on default method The column headers can be lower case or upper case, the output format is set to upper case. In addition to the weather variables, the function to generate hourly FWI2025 outputs requires the timezone where the weather station is located and the start-up value for the moisture codes (e.g. FFMC of 85, DMC of 6 and DC of 15). See the next section below to see where it is specified.","title":"Input Data"},{"location":"code/#function-parameters","text":"R: hFWI(df_wx, timezone, ffmc_old = 85, dmc_old = 6, dc_old = 15) Parameter Description df_wx Data frame or formatted table (can have multiple years and stations, needs to be temporally sequential during a given year) timezone Timezone in which the weather station is located as the number of offset hours from UTC (e.g. for stations in Central Standard time the timezone is set to -6) ffmc_old dmc_old The start-up value of the duff moisture code (e.g. 6, this is the default) dc_old The start-up value of the drought code (e.g. 15, this is the default) Python: hFWI(df_wx, ffmc_old = 85, dmc_old = 6, dc_old = 15, silent = False) Parameter Description df_wx Data frame or formatted table (can have multiple years and stations, needs to be temporally sequential during a given year) timezone Timezone in which the weather station is located ffmc_old The startup value of the fine fuel moisture code (e.g. 85, this is the default) dmc_old The start-up value of the duff moisture code (e.g. 6, this is the default) dc_old The start-up value of the drought code (e.g. 15, this is the default) silent Print progress messages to monitor script. True or False, False by default C: The C version can be run from command line with the following arguments in order: Code Description local GMToffset Timezone in which the weather station is located starting FFMC The startup value of the fine fuel moisture code (e.g. 85) starting DMC The start-up value of the duff moisture code (e.g. 6) starting DC The start-up value of the drought code (e.g. 15) input file Name of .csv file containing data for a single station over the course of a year output file Name of the file to output results into","title":"Function Parameters"},{"location":"code/#output-description","text":"The output is also the same format as the input data, with the following columns appended: Column Description timestamp Date and time of weather and FWI variable. Timestamp YYYY-MM-DD HH:MM:SS. (not in C) date YYYY-MM-DD Date type (without hh:mm:ss). (not in C) sunrise Time of sunrise based on the latitude, longitude, and date in military time (decimal time). (not in C) sunset Time of sunset based on the latitude, longitude, and date in military time (decimal time). (not in C) sunlight_hours Number of hours (hr) between sunrise and sunset (decimal time). (not in C) solrad Solar Radiation measured in kilowatts per square metre (kW/m^2) for grassland codes, generated automatically if missing from input (number). (needs to be calculated using make_inputs.c if not given) percent_cured Percent of cured (dead) grass fuels in grasslands, generated automatically if missing from input. Used exclusively in the Grassland calculations. Percentage as number (0-100). (needs to be calculated using make_inputs.c if not given) grass_fuel_load The standard grass fuel load is built into the Python and R code, 0.35 kg/m^2. (needs to be calculated using make_inputs.c if not given, generates a column with the standard value) ffmc Fine Fuel Moisture Code (number) dmc Duff Moisture Code (number) dc Drought Code (number) isi Initial Spread Index (number) bui Buildup Index (number) fwi Fire Weather Index (number) dsr Daily Severity Rating (number) gfmc Grass Fuel Moisture Code, 0-101 similar to FFMC (number) gsi Grassland Spread Index (number) gfwi Grassland Fire Weather Index (number)","title":"Output Description"},{"location":"code/#daily-summaries","text":"The hourly FWI output can be summarized in a variety of ways depending on usage and requirements. These can be found within the \"daily_summaries\" script. generate_daily_summaries() boils down the hourly data into some daily metrics.","title":"Daily Summaries"},{"location":"code/#input-data_1","text":"The only input to generate_daily_summaries() is the output from hFWI() .","title":"Input Data"},{"location":"code/#function-parameters_1","text":"R: generate_daily_summaries <- function(hourly_data) {} Python: def generate_daily_summaries(hourly_data): C: hourly_data = the output dataframe generated by NG_FWI","title":"Function Parameters"},{"location":"code/#output-description_1","text":"Parameter Description wstnid Weather station ID, or unique identifier for the weather station year Year, YYYY, number (e.g. 2024) mon Month, M, number (e.g. 3) day Day, D number (e.g. 8) sunrise Time of sunrise. HH:MM:SS timestamp format in military time (e.g. 06:30:55) sunset Time of sunset. HH:MM:SS timestamp format in military time (e.g. 19:45:05) peak_time The hour (hr) in military time (0-23), number format. The hour where one might expect maximum fire behaviour as expressed by a modified ISI (see definitions of wind_speed_smoothed and peak_isi_smoothed below). If the peak ISI (from peak_isi_smoothed field) is less than five, the peak_time is set to 17:00 hours duration Number of hours (hr), number format. Can also be called duration of a burning window, number of hours in the day where one could expect an active fire (where a modified ISI is equal or greater than five). If the ISI did not reach 5 or greater, the duration is zero wind_speed_smoothed Wind Speed in kilometres per hour (km/hr), double precision. Hourly wind speed recorded based on a 10 min average can be noisy hour-to-hour, this makes it difficult to estimate the duration of a burning window. To estimate the duration of a burning window and peak time, the hourly windspeed is smoothed and the ISI is recalculated based on the smoothed wind speed and FFMC peak_isi_smoothed Maximum Initial Spread Index (ISI) recalculated based on FFMC and smoothed wind speed from \u2018wind_speed_smoothed\u2019, double precision number. Number, double precision ffmc Fine Fuel Moisture Code corresponding to the FFMC at the hour of peak time. Number, double precision dmc Duff Moisture Code corresponding to the DMC at the hour of peak. Number, double precision dc Drought Code corresponding to the DC at the hour of peak time. Number, double precision isi Initial Spread Index corresponding to the ISI at the hour of peak time. Number, double precision bui Buildup Index corresponding to the BUI at the hour of peak time. Number, double precision fwi Fire Weather Index corresponding to the FWI at the hour of peak time. Number, double precision dsr Daily Severity Rating corresponding to the DSR at the hour of peak time. Number, double precision gfmc Grass Fuel Moisture Code corresponding to the GFMC at the hour of peak time. Number, double precision gsi Grassland Spread Index corresponding to the GSI at the hour of peak time. Number, double precision gfwi Grassland Fire Weather Index corresponding to the GFWI at the hour of peak time. Number, double precision","title":"Output Description"},{"location":"code/#license","text":"The NG-CFFDRS scripts are licensed under the GNU General Public License version 2. A copy of the license is available at https://github.com/nrcan-cfs-fire/cffdrs-ng?tab=GPL-2.0-1-ov-file#readme","title":"License"},{"location":"contact/","text":"Fran\u00e7ais Contact NG-CFFDRS is being updated by the Canadian Forest Service Fire Danger Group. For code issues, refer to the Feedback and Bug Reports section of the repository README file . For all other inquiries, scientific or general, or website feedback, please send an email to: firedanger-dangerincendie@nrcan-rncan.gc.ca Any feedback to help make this a better resource is greatly appreciated! Fire Danger Group Members Gabrielle Ayres (she, her | elle, elle) Research Mobilization Analyst Bio gabrielle.ayres@nrcan-rncan.gc.ca Jonathan Boucher Wildland Fire Research Scientist Bio jonathan.boucher@nrcan-rncan.gc.ca Luke Collins Research Scientist luke.collins@nrcan-rncan.gc.ca Anne Cotton-Gagnon (elle, elle | she, her) Forest Fire Research Officer Bio anne.cotton-gagnon@nrcan-rncan.gc.ca Patrick Deane (he, him | il, lui) Forest Fire Research Specialist Bio patrick.deane@nrcan-rncan.gc.ca Chelene Hanes Wildland Fire Research Scientist Bio chelene.hanes@nrcan-rncan.gc.ca Natasha Jurko Physical Fire Scientist natasha.jurko@nrcan-rncan.gc.ca Samuel Lacarte (he, him | il, lui) Fire Research Officer samuel.lacarte@nrcan-rncan.gc.ca Daniel Perrakis Research Scientist daniel.perrakis@nrcan-rncan.gc.ca Mackenzie Simpson IT Analyst mackenzie.simpson@nrcan-rncan.gc.ca Kevin Siu (he, him | il, lui) Fire Analyst Programmer Bio kevin.siu@nrcan-rncan.gc.ca Steve Taylor Forest Fire Research Scientist steve.taylor@nrcan-rncan.gc.ca Daniel Thompson (he, him | il, lui) Forest Fire Research Scientist daniel.thompson@nrcan-rncan.gc.ca Derek van der Kamp Research Scientist derek.vanderkamp@nrcan-rncan.gc.ca Mike Wotton Forest Fire Research Scientist Bio (Firelab) mike.wotton@daniels.utoronto.ca","title":"Contact"},{"location":"contact/#contact","text":"NG-CFFDRS is being updated by the Canadian Forest Service Fire Danger Group. For code issues, refer to the Feedback and Bug Reports section of the repository README file . For all other inquiries, scientific or general, or website feedback, please send an email to: firedanger-dangerincendie@nrcan-rncan.gc.ca Any feedback to help make this a better resource is greatly appreciated!","title":"Contact"},{"location":"contact/#fire-danger-group-members","text":"Gabrielle Ayres (she, her | elle, elle) Research Mobilization Analyst Bio gabrielle.ayres@nrcan-rncan.gc.ca Jonathan Boucher Wildland Fire Research Scientist Bio jonathan.boucher@nrcan-rncan.gc.ca Luke Collins Research Scientist luke.collins@nrcan-rncan.gc.ca Anne Cotton-Gagnon (elle, elle | she, her) Forest Fire Research Officer Bio anne.cotton-gagnon@nrcan-rncan.gc.ca Patrick Deane (he, him | il, lui) Forest Fire Research Specialist Bio patrick.deane@nrcan-rncan.gc.ca Chelene Hanes Wildland Fire Research Scientist Bio chelene.hanes@nrcan-rncan.gc.ca Natasha Jurko Physical Fire Scientist natasha.jurko@nrcan-rncan.gc.ca Samuel Lacarte (he, him | il, lui) Fire Research Officer samuel.lacarte@nrcan-rncan.gc.ca Daniel Perrakis Research Scientist daniel.perrakis@nrcan-rncan.gc.ca Mackenzie Simpson IT Analyst mackenzie.simpson@nrcan-rncan.gc.ca Kevin Siu (he, him | il, lui) Fire Analyst Programmer Bio kevin.siu@nrcan-rncan.gc.ca Steve Taylor Forest Fire Research Scientist steve.taylor@nrcan-rncan.gc.ca Daniel Thompson (he, him | il, lui) Forest Fire Research Scientist daniel.thompson@nrcan-rncan.gc.ca Derek van der Kamp Research Scientist derek.vanderkamp@nrcan-rncan.gc.ca Mike Wotton Forest Fire Research Scientist Bio (Firelab) mike.wotton@daniels.utoronto.ca","title":"Fire Danger Group Members"},{"location":"home/","text":"Fran\u00e7ais Home About The Canadian Forest Fire Danger Rating System (CFFDRS) is the principal source of fire information for all wildland fire management agencies across Canada. It has widespread use as a regional and fireline safety and awareness tool. The CFFDRS is undergoing extensive revisions under the name Next Generation CFFDRS (NG-CFFDRS) , with rollout to practitioners occurring during 2024, 2025, and beyond. The primary goal is to meet the evolving needs of advanced users while maintaining its original simplicity and effectiveness. This website is intended to: inform users about the ongoing changes to the CFFDRS centralize access to the code and documentation host tutorials for new users in multiple coding languages Join our newsletter mailing list to get email updates about the latest developments with CFFDRS2025. For those unfamiliar with the CFFDRS, or for official information regarding wildfires in Canada, read more on official Government of Canada pages under Resources#Overview . The previous CFFDRS1992 code can still be found on the CFFDRS GitHub , while the R documentation can be found on the CFFDRS CRAN page . Announcements March 2025 The first edition of the newsletter is available now under Resources#Newsletter . It goes over the new features of the Fire Weather Index (FWI2025) including the ability to use hourly data and the introduction of outputs for grasslands. January 2025 The NG-CFFDRS Fire Weather Index (FWI) System module is available for users to test. Release of the other modules of the CFFDRS (e.g. FBP System, FMS, and FOP System) is ongoing.","title":"Home"},{"location":"home/#home","text":"","title":"Home"},{"location":"home/#about","text":"The Canadian Forest Fire Danger Rating System (CFFDRS) is the principal source of fire information for all wildland fire management agencies across Canada. It has widespread use as a regional and fireline safety and awareness tool. The CFFDRS is undergoing extensive revisions under the name Next Generation CFFDRS (NG-CFFDRS) , with rollout to practitioners occurring during 2024, 2025, and beyond. The primary goal is to meet the evolving needs of advanced users while maintaining its original simplicity and effectiveness. This website is intended to: inform users about the ongoing changes to the CFFDRS centralize access to the code and documentation host tutorials for new users in multiple coding languages Join our newsletter mailing list to get email updates about the latest developments with CFFDRS2025. For those unfamiliar with the CFFDRS, or for official information regarding wildfires in Canada, read more on official Government of Canada pages under Resources#Overview . The previous CFFDRS1992 code can still be found on the CFFDRS GitHub , while the R documentation can be found on the CFFDRS CRAN page .","title":"About"},{"location":"home/#announcements","text":"","title":"Announcements"},{"location":"home/#march-2025","text":"The first edition of the newsletter is available now under Resources#Newsletter . It goes over the new features of the Fire Weather Index (FWI2025) including the ability to use hourly data and the introduction of outputs for grasslands.","title":"March 2025"},{"location":"home/#january-2025","text":"The NG-CFFDRS Fire Weather Index (FWI) System module is available for users to test. Release of the other modules of the CFFDRS (e.g. FBP System, FMS, and FOP System) is ongoing.","title":"January 2025"},{"location":"resources/","text":"Fran\u00e7ais Resources Newsletter Volume 1, Issue 1 (March 2025) \ud83d\udce5 Sign-up To receive our newsletters directly to your inbox, fill out the form at the link below. We will not share your data and will only send you information related to CFFDRS. Newsletter Sign-up Form (Microsoft Forms) Reports Next Generation CFFDRS (NG-CFFDRS) CFFDRS2025 Solar Radiation Input (Draft) \ud83d\udce5 Field Guides Field Guide: Sampling Fuels in the Context of the NG-CFFDRS \ud83d\udce5 Field Guide to the Canadian FBP System 3rd edition (Red Book) Field Guide for Predicting Fire Behaviour in Ontario's Tallgrass Prairie (Yellow Book) Weather Guide for the CFFDRS CFFDRS1992 FWI1987 Development and Structure FBP1992 Development and Structure (ST-X-3) FBP1992 Updates and Revisions (GLC-X-10) More current and historical CFFDRS documentation can be found on the NRCan Open S&T Repository (OSTR) . Maps Canadian Wildland Fire Information System (CWFIS) Canadian Interagency Forest Fire Centre (CIFFC) National Forest Information System (NFIS) Forest Atlas Global Wildfire Information System (GWIS) Overview Forest fires Fire management Canadian Forest Fire Danger Rating System (CFFDRS) Government of Canada Natural Resources Canada Link Hubs Wildland fires Wildfires","title":"Resources"},{"location":"resources/#resources","text":"","title":"Resources"},{"location":"resources/#newsletter","text":"Volume 1, Issue 1 (March 2025) \ud83d\udce5","title":"Newsletter"},{"location":"resources/#sign-up","text":"To receive our newsletters directly to your inbox, fill out the form at the link below. We will not share your data and will only send you information related to CFFDRS. Newsletter Sign-up Form (Microsoft Forms)","title":"Sign-up"},{"location":"resources/#reports","text":"Next Generation CFFDRS (NG-CFFDRS) CFFDRS2025 Solar Radiation Input (Draft) \ud83d\udce5 Field Guides Field Guide: Sampling Fuels in the Context of the NG-CFFDRS \ud83d\udce5 Field Guide to the Canadian FBP System 3rd edition (Red Book) Field Guide for Predicting Fire Behaviour in Ontario's Tallgrass Prairie (Yellow Book) Weather Guide for the CFFDRS CFFDRS1992 FWI1987 Development and Structure FBP1992 Development and Structure (ST-X-3) FBP1992 Updates and Revisions (GLC-X-10) More current and historical CFFDRS documentation can be found on the NRCan Open S&T Repository (OSTR) .","title":"Reports"},{"location":"resources/#maps","text":"Canadian Wildland Fire Information System (CWFIS) Canadian Interagency Forest Fire Centre (CIFFC) National Forest Information System (NFIS) Forest Atlas Global Wildfire Information System (GWIS)","title":"Maps"},{"location":"resources/#overview","text":"Forest fires Fire management Canadian Forest Fire Danger Rating System (CFFDRS) Government of Canada Natural Resources Canada Link Hubs Wildland fires Wildfires","title":"Overview"},{"location":"tutorials/","text":"Fran\u00e7ais Tutorials Hourly FWI This tutorial is designed to be an example of how to calculate FWI2025 with tabular data. The same example dataset is used in both R and Python tutorials. Data wx_prf.csv contains hourly weather recorded from the Petawawa Research Forest (PRF) weather station during the 2007 field season. The data is sorted by time and has no gaps. The column headers are those required for hourly FWI calculations, details can be found at Code#Hourly Fire Weather Index . There is no input for solar radiation ( sol_rad ) or curing fraction ( percent_cure ) because these are optional inputs and they will be automatically estimated if they are not given. R What you'll need Go to the CFFDRS-NG repo and download/clone/fork the following: wx_prf.csv NG_FWI.r util.r daily_summaries.r Tutorial_NGFWI.r \ud83d\udce5 Prior to running this tutorial, the user should ensure they have the necessary packages and libraries installed. Each programming language references different packages or libraries, see Code#Packages for more details, or look in the code files. Steps Open the Tutorial_NGFWI.r code file. You can either follow the code and comments in the file or continue on this page (both include the same code and content). Load libraries Ensure you have the necessary libraries installed. Run install.packages() to install any you are missing. library(lubridate) library(data.table) library(lutz) Check your current working directory getwd() If the working directory is different from where you saved the NG-CFFDRS scripts, change the working directory with setwd() to that folder. Load FWI2025 functions and weather station data source(\"NG_FWI.r\") source(\"util.r\") source(\"daily_summaries.r\") data <- read.csv('wx_prf.csv') If you print the column names, data should contain the following 11 columns: > names(data) [1] \"id\" \"lat\" \"long\" \"yr\" \"mon\" \"day\" \"hr\" \"temp\" \"rh\" \"ws\" [11] \"prec\" Find the timezone The 'lutz' library has functions to get the timezone of the weather station based on latitude and longitude. First, make a dataframe of stations with unique ID, latitude, and longitude. stations <- unique(data[c(\"id\", \"lat\", \"long\")]) Printing the dataframe, the only station is at PRF: > stations id lat long 1 PRF 46.01393 -77.41804 Next, find the timezone for each unique ID based on latitude and longitude. tz_lookup_coords() can take some time. You may need to download the package 'sf' for method = \"accurate\". tz_loc <- tz_lookup_coords(stations$lat, stations$long, method = \"accurate\") PRF is in the same timezone as Toronto: > tz_loc [1] \"America/Toronto\" Find the UTC offset The UTC timezone offset is a required input for the FWI2025 function. Since weather data is normally collected using standard time (not daylight time), the date is set to January 1. Using dates from the dataset (during the summer fire season) gives the UTC offset for daylight time which is off by 1. utc <- tz_offset(\"2007-01-01\", tz_loc)[[5]] Print the UTC offset, for this tutorial PRF is in Eastern Time (EST) so UTC -5: > utc [1] -5 Calculate hourly FWI System outputs with FWI2025 hFWI() is the function that calculates hourly FWI codes in FWI2025. Details about the hourly FWI function can be found at Code#Hourly Fire Weather Index . It can handle multiple stations and years/fire seasons (not shown in this tutorial). Make sure to specify the corresponding UTC offsets for different stations. Default starting FWI codes are: ffmc_old = 85, dmc_old = 6, and dc_old = 15. data_fwi <- hFWI(data, utc) Output is a data table , with FWI calculations appended after the input columns. Save the output as a .csv file (overrides any data in any preexisting file) write.csv(data_fwi, \"wx_prf_fwi.csv\") The last two rows of ffmc , dmc , dc , isi , bui , and fwi are: > tail(data_fwi[, c(\"ffmc\", \"dmc\", \"dc\", \"isi\", \"bui\", \"fwi\")], 2) ffmc dmc dc isi bui fwi <num> <num> <num> <num> <num> <num> 1: 80.26688 10.05399 212.8417 1.642292 17.98419 2.172703 2: 82.17590 10.31187 213.3781 2.146157 18.40063 3.174787 View a simple summary of the standard FWI components. standard_components <- c(\"ffmc\", \"dmc\", \"dc\", \"isi\", \"bui\", \"fwi\") View(summary(data_fwi[, ..standard_components])) Calculate daily summaries Calculate outputs like peak burn time and number of hours of spread potential. Details about the daily summaries function can be found at Code#Daily Summaries . report <- generate_daily_summaries(data_fwi) Compare a simple summary of some daily outputs (convert values to numeric class first). > daily_components <- c(\"peak_time\", \"duration\", \"peak_isi_smoothed\", \"dsr\") > summary(apply(report[daily_components], 2, as.numeric)) peak_time duration peak_isi_smoothed dsr Min. :13.00 Min. : 0.000 Min. : 0.000001 Min. :0.00000 1st Qu.:17.00 1st Qu.: 0.000 1st Qu.: 2.039376 1st Qu.:0.07124 Median :17.00 Median : 0.000 Median : 4.031968 Median :1.17984 Mean :17.29 Mean : 2.697 Mean : 4.527904 Mean :1.67124 3rd Qu.:18.00 3rd Qu.: 5.000 3rd Qu.: 6.495304 3rd Qu.:2.90284 Max. :23.00 Max. :14.000 Max. :15.770692 Max. :7.11425 From here, the outputs can be converted to any datatype for further analysis or plotted for visualization. Python What you'll need Go to the CFFDRS-NG repo and download/clone/fork the following: wx_prf.csv NG_FWI.py util.py daily_summaries.py Tutorial_NGFWI.py \ud83d\udce5 Prior to running this tutorial, the user should ensure they have the necessary packages installed. Each programming language references different packages or libraries, see Code#Packages for more details, or look in the code files. Steps Open the Tutorial_NGFWI.py code file. You can either follow the code and comments in the file or continue on this page (both include the same code and content). Load packages Ensure you have the necessary packages installed. Run pip install to install any you are missing. import pandas as pd from datetime import datetime from timezonefinder import TimezoneFinder from pytz import timezone Load FWI2025 functions and weather station data For the import to work, the working directory must match the file location where NG_FWI.py , util.py , and daily_summaries.py are stored. from NG_FWI import hFWI from daily_summaries import generate_daily_summaries data = pd.read_csv('wx_prf.csv') If you print the first 5 columns, it should look like this: >>> data.head() id lat long yr mon day hr temp rh ws prec 0 PRF 46.013925 -77.418044 2007 5 10 8 14.78 94.90 2.7324 0.0 1 PRF 46.013925 -77.418044 2007 5 10 9 17.44 79.11 3.6663 0.0 2 PRF 46.013925 -77.418044 2007 5 10 10 21.21 62.95 4.3590 0.0 3 PRF 46.013925 -77.418044 2007 5 10 11 23.60 46.17 8.2100 0.0 4 PRF 46.013925 -77.418044 2007 5 10 12 24.55 41.53 9.4200 0.0 Find the timezone First, make a dataframe of stations with unique ID, latitude, and longitude. stations = data.loc[:, ['id', 'lat', 'long']].drop_duplicates() Printing the dataframe, the only station is at PRF: >>> stations id lat long 0 PRF 46.013925 -77.418044 Next, find the timezone for each unique ID based on latitude and longitude. tf = TimezoneFinder() tz_loc = tf.timezone_at(lat = stations.at[0, 'lat'], lng = stations.at[0, 'long']) PRF is in the same timezone as Toronto: >>> tz_loc 'America/Toronto' Find the UTC offset The UTC timezone offset is a required input for the FWI2025 function. Since weather data is normally collected using standard time (not daylight time), the date is set to January 1. Using dates from the dataset (during the summer fire season) gives the UTC offset for daylight time which is off by 1. utc = timezone(tz_loc).localize(datetime(2007, 1, 1)).strftime('%z') Print the UTC offset, for this tutorial PRF is in Eastern Time (EST) so UTC is '-0500': >>> utc '-0500' The UTC offset input is expected as integer hours, so we can set it to -5. utc = -5 Calculate hourly FWI System outputs with FWI2025 hFWI() is the function that calculates hourly FWI codes in FWI2025. Details about the hourly FWI function can be found at Code#Hourly Fire Weather Index . It can handle multiple stations and years/fire seasons (not shown in this tutorial). Make sure to specify the corresponding UTC offsets for different stations. Default starting FWI codes are: ffmc_old = 85, dmc_old = 6, and dc_old = 15. data_fwi = hFWI(data, utc) Output is a dataframe, with FWI calculations appended after the input columns. Save the output as a .csv file (overrides any data in any preexisting file). data_fwi.to_csv('wx_prf_fwi_py.csv') The last two rows of ffmc , dmc , dc , isi , bui , and fwi are: >>> standard_components = ['ffmc', 'dmc', 'dc', 'isi', 'bui', 'fwi'] >>> data_fwi.loc[:, standard_components].tail(2) ffmc dmc dc isi bui fwi 2621 80.266881 10.053992 212.841711 1.642292 17.984189 2.172703 2622 82.175898 10.311868 213.378111 2.146157 18.400630 3.174787 You can print a simple summary of the standard FWI components. data_fwi.loc[:, standard_components].describe() Calculate daily summaries Calculate outputs like peak burn time and number of hours of spread potential. Details about the daily summaries function can be found at Code#Daily Summaries . report = generate_daily_summaries(data_fwi) View a distribution of the hour of daily peak burn, which looks like this: >>> report['peak_time'].value_counts().sort_index() peak_time 13 1 14 2 15 4 16 10 17 53 18 23 19 14 20 1 23 1 Name: count, dtype: int64 From here, the outputs can be converted to any datatype for further analysis or plotted for visualization.","title":"Tutorials"},{"location":"tutorials/#tutorials","text":"","title":"Tutorials"},{"location":"tutorials/#hourly-fwi","text":"This tutorial is designed to be an example of how to calculate FWI2025 with tabular data. The same example dataset is used in both R and Python tutorials.","title":"Hourly FWI"},{"location":"tutorials/#data","text":"wx_prf.csv contains hourly weather recorded from the Petawawa Research Forest (PRF) weather station during the 2007 field season. The data is sorted by time and has no gaps. The column headers are those required for hourly FWI calculations, details can be found at Code#Hourly Fire Weather Index . There is no input for solar radiation ( sol_rad ) or curing fraction ( percent_cure ) because these are optional inputs and they will be automatically estimated if they are not given.","title":"Data"},{"location":"tutorials/#r","text":"","title":"R"},{"location":"tutorials/#what-youll-need","text":"Go to the CFFDRS-NG repo and download/clone/fork the following: wx_prf.csv NG_FWI.r util.r daily_summaries.r Tutorial_NGFWI.r \ud83d\udce5 Prior to running this tutorial, the user should ensure they have the necessary packages and libraries installed. Each programming language references different packages or libraries, see Code#Packages for more details, or look in the code files.","title":"What you'll need"},{"location":"tutorials/#steps","text":"Open the Tutorial_NGFWI.r code file. You can either follow the code and comments in the file or continue on this page (both include the same code and content).","title":"Steps"},{"location":"tutorials/#load-libraries","text":"Ensure you have the necessary libraries installed. Run install.packages() to install any you are missing. library(lubridate) library(data.table) library(lutz)","title":"Load libraries"},{"location":"tutorials/#check-your-current-working-directory","text":"getwd() If the working directory is different from where you saved the NG-CFFDRS scripts, change the working directory with setwd() to that folder.","title":"Check your current working directory"},{"location":"tutorials/#load-fwi2025-functions-and-weather-station-data","text":"source(\"NG_FWI.r\") source(\"util.r\") source(\"daily_summaries.r\") data <- read.csv('wx_prf.csv') If you print the column names, data should contain the following 11 columns: > names(data) [1] \"id\" \"lat\" \"long\" \"yr\" \"mon\" \"day\" \"hr\" \"temp\" \"rh\" \"ws\" [11] \"prec\"","title":"Load FWI2025 functions and weather station data"},{"location":"tutorials/#find-the-timezone","text":"The 'lutz' library has functions to get the timezone of the weather station based on latitude and longitude. First, make a dataframe of stations with unique ID, latitude, and longitude. stations <- unique(data[c(\"id\", \"lat\", \"long\")]) Printing the dataframe, the only station is at PRF: > stations id lat long 1 PRF 46.01393 -77.41804 Next, find the timezone for each unique ID based on latitude and longitude. tz_lookup_coords() can take some time. You may need to download the package 'sf' for method = \"accurate\". tz_loc <- tz_lookup_coords(stations$lat, stations$long, method = \"accurate\") PRF is in the same timezone as Toronto: > tz_loc [1] \"America/Toronto\"","title":"Find the timezone"},{"location":"tutorials/#find-the-utc-offset","text":"The UTC timezone offset is a required input for the FWI2025 function. Since weather data is normally collected using standard time (not daylight time), the date is set to January 1. Using dates from the dataset (during the summer fire season) gives the UTC offset for daylight time which is off by 1. utc <- tz_offset(\"2007-01-01\", tz_loc)[[5]] Print the UTC offset, for this tutorial PRF is in Eastern Time (EST) so UTC -5: > utc [1] -5","title":"Find the UTC offset"},{"location":"tutorials/#calculate-hourly-fwi-system-outputs-with-fwi2025","text":"hFWI() is the function that calculates hourly FWI codes in FWI2025. Details about the hourly FWI function can be found at Code#Hourly Fire Weather Index . It can handle multiple stations and years/fire seasons (not shown in this tutorial). Make sure to specify the corresponding UTC offsets for different stations. Default starting FWI codes are: ffmc_old = 85, dmc_old = 6, and dc_old = 15. data_fwi <- hFWI(data, utc) Output is a data table , with FWI calculations appended after the input columns. Save the output as a .csv file (overrides any data in any preexisting file) write.csv(data_fwi, \"wx_prf_fwi.csv\") The last two rows of ffmc , dmc , dc , isi , bui , and fwi are: > tail(data_fwi[, c(\"ffmc\", \"dmc\", \"dc\", \"isi\", \"bui\", \"fwi\")], 2) ffmc dmc dc isi bui fwi <num> <num> <num> <num> <num> <num> 1: 80.26688 10.05399 212.8417 1.642292 17.98419 2.172703 2: 82.17590 10.31187 213.3781 2.146157 18.40063 3.174787 View a simple summary of the standard FWI components. standard_components <- c(\"ffmc\", \"dmc\", \"dc\", \"isi\", \"bui\", \"fwi\") View(summary(data_fwi[, ..standard_components]))","title":"Calculate hourly FWI System outputs with FWI2025"},{"location":"tutorials/#calculate-daily-summaries","text":"Calculate outputs like peak burn time and number of hours of spread potential. Details about the daily summaries function can be found at Code#Daily Summaries . report <- generate_daily_summaries(data_fwi) Compare a simple summary of some daily outputs (convert values to numeric class first). > daily_components <- c(\"peak_time\", \"duration\", \"peak_isi_smoothed\", \"dsr\") > summary(apply(report[daily_components], 2, as.numeric)) peak_time duration peak_isi_smoothed dsr Min. :13.00 Min. : 0.000 Min. : 0.000001 Min. :0.00000 1st Qu.:17.00 1st Qu.: 0.000 1st Qu.: 2.039376 1st Qu.:0.07124 Median :17.00 Median : 0.000 Median : 4.031968 Median :1.17984 Mean :17.29 Mean : 2.697 Mean : 4.527904 Mean :1.67124 3rd Qu.:18.00 3rd Qu.: 5.000 3rd Qu.: 6.495304 3rd Qu.:2.90284 Max. :23.00 Max. :14.000 Max. :15.770692 Max. :7.11425 From here, the outputs can be converted to any datatype for further analysis or plotted for visualization.","title":"Calculate daily summaries"},{"location":"tutorials/#python","text":"","title":"Python"},{"location":"tutorials/#what-youll-need_1","text":"Go to the CFFDRS-NG repo and download/clone/fork the following: wx_prf.csv NG_FWI.py util.py daily_summaries.py Tutorial_NGFWI.py \ud83d\udce5 Prior to running this tutorial, the user should ensure they have the necessary packages installed. Each programming language references different packages or libraries, see Code#Packages for more details, or look in the code files.","title":"What you'll need"},{"location":"tutorials/#steps_1","text":"Open the Tutorial_NGFWI.py code file. You can either follow the code and comments in the file or continue on this page (both include the same code and content).","title":"Steps"},{"location":"tutorials/#load-packages","text":"Ensure you have the necessary packages installed. Run pip install to install any you are missing. import pandas as pd from datetime import datetime from timezonefinder import TimezoneFinder from pytz import timezone","title":"Load packages"},{"location":"tutorials/#load-fwi2025-functions-and-weather-station-data_1","text":"For the import to work, the working directory must match the file location where NG_FWI.py , util.py , and daily_summaries.py are stored. from NG_FWI import hFWI from daily_summaries import generate_daily_summaries data = pd.read_csv('wx_prf.csv') If you print the first 5 columns, it should look like this: >>> data.head() id lat long yr mon day hr temp rh ws prec 0 PRF 46.013925 -77.418044 2007 5 10 8 14.78 94.90 2.7324 0.0 1 PRF 46.013925 -77.418044 2007 5 10 9 17.44 79.11 3.6663 0.0 2 PRF 46.013925 -77.418044 2007 5 10 10 21.21 62.95 4.3590 0.0 3 PRF 46.013925 -77.418044 2007 5 10 11 23.60 46.17 8.2100 0.0 4 PRF 46.013925 -77.418044 2007 5 10 12 24.55 41.53 9.4200 0.0","title":"Load FWI2025 functions and weather station data"},{"location":"tutorials/#find-the-timezone_1","text":"First, make a dataframe of stations with unique ID, latitude, and longitude. stations = data.loc[:, ['id', 'lat', 'long']].drop_duplicates() Printing the dataframe, the only station is at PRF: >>> stations id lat long 0 PRF 46.013925 -77.418044 Next, find the timezone for each unique ID based on latitude and longitude. tf = TimezoneFinder() tz_loc = tf.timezone_at(lat = stations.at[0, 'lat'], lng = stations.at[0, 'long']) PRF is in the same timezone as Toronto: >>> tz_loc 'America/Toronto'","title":"Find the timezone"},{"location":"tutorials/#find-the-utc-offset_1","text":"The UTC timezone offset is a required input for the FWI2025 function. Since weather data is normally collected using standard time (not daylight time), the date is set to January 1. Using dates from the dataset (during the summer fire season) gives the UTC offset for daylight time which is off by 1. utc = timezone(tz_loc).localize(datetime(2007, 1, 1)).strftime('%z') Print the UTC offset, for this tutorial PRF is in Eastern Time (EST) so UTC is '-0500': >>> utc '-0500' The UTC offset input is expected as integer hours, so we can set it to -5. utc = -5","title":"Find the UTC offset"},{"location":"tutorials/#calculate-hourly-fwi-system-outputs-with-fwi2025_1","text":"hFWI() is the function that calculates hourly FWI codes in FWI2025. Details about the hourly FWI function can be found at Code#Hourly Fire Weather Index . It can handle multiple stations and years/fire seasons (not shown in this tutorial). Make sure to specify the corresponding UTC offsets for different stations. Default starting FWI codes are: ffmc_old = 85, dmc_old = 6, and dc_old = 15. data_fwi = hFWI(data, utc) Output is a dataframe, with FWI calculations appended after the input columns. Save the output as a .csv file (overrides any data in any preexisting file). data_fwi.to_csv('wx_prf_fwi_py.csv') The last two rows of ffmc , dmc , dc , isi , bui , and fwi are: >>> standard_components = ['ffmc', 'dmc', 'dc', 'isi', 'bui', 'fwi'] >>> data_fwi.loc[:, standard_components].tail(2) ffmc dmc dc isi bui fwi 2621 80.266881 10.053992 212.841711 1.642292 17.984189 2.172703 2622 82.175898 10.311868 213.378111 2.146157 18.400630 3.174787 You can print a simple summary of the standard FWI components. data_fwi.loc[:, standard_components].describe()","title":"Calculate hourly FWI System outputs with FWI2025"},{"location":"tutorials/#calculate-daily-summaries_1","text":"Calculate outputs like peak burn time and number of hours of spread potential. Details about the daily summaries function can be found at Code#Daily Summaries . report = generate_daily_summaries(data_fwi) View a distribution of the hour of daily peak burn, which looks like this: >>> report['peak_time'].value_counts().sort_index() peak_time 13 1 14 2 15 4 16 10 17 53 18 23 19 14 20 1 23 1 Name: count, dtype: int64 From here, the outputs can be converted to any datatype for further analysis or plotted for visualization.","title":"Calculate daily summaries"},{"location":"contact/Anne_Cotton-Gagnon/","text":"Fran\u00e7ais Anne Cotton-Gagnon Ing.f. Biol. M.Sc. (elle, elle | she, her) Forest Fire Research Officer Laurentian Forestry Centre anne.cotton-gagnon@nrcan-rncan.gc.ca ResearchGate Anne is a Forest Fire Research Officers with the Canadian Forest Service based out of the Laurentian Forestry Centre in Quebec city, Quebec. She contributes to the majority of Jonathan Boucher\u2019s team research projects, leading and/or supporting components such as field work preparation and realisation, statistical and spatial analyses, publication, presentation, and knowledge exchange with collaborators and partners. Her research interests include, but are not limited to, mitigation actions at the wildland urban interface, suppression effectiveness, and the use of experimental burns to better understand fire behavior. Her main motivation throughout her work remains the relationships built with the fire world actors, and the enriching conversations, exchanges and projects that result from them. Anne has done her undergraduate studies in biology, then a Master\u2019s degree in geographical sciences looking at the spruce budworm impact on balsam fir and black spruce regeneration, both at Laval University. After another year of studies in forestry and geomatics, she obtained her membership to the Ordre des Ing\u00e9nieurs Forestiers du Qu\u00e9bec (RPF for the province of Quebec). She had already been working as a student at the Laurentian Forestry Centre since her first undergraduate summer and switched to being a Forest Officer on forest soils, biomass and entomology in 2018. In 2021, she obtained her current position in wildfire research in Jonathan Boucher\u2019s team, which has kept her highly motivated ever since.","title":"Anne Cotton Gagnon"},{"location":"contact/Anne_Cotton-Gagnon/#anne-cotton-gagnon","text":"Ing.f. Biol. M.Sc. (elle, elle | she, her) Forest Fire Research Officer Laurentian Forestry Centre anne.cotton-gagnon@nrcan-rncan.gc.ca ResearchGate Anne is a Forest Fire Research Officers with the Canadian Forest Service based out of the Laurentian Forestry Centre in Quebec city, Quebec. She contributes to the majority of Jonathan Boucher\u2019s team research projects, leading and/or supporting components such as field work preparation and realisation, statistical and spatial analyses, publication, presentation, and knowledge exchange with collaborators and partners. Her research interests include, but are not limited to, mitigation actions at the wildland urban interface, suppression effectiveness, and the use of experimental burns to better understand fire behavior. Her main motivation throughout her work remains the relationships built with the fire world actors, and the enriching conversations, exchanges and projects that result from them. Anne has done her undergraduate studies in biology, then a Master\u2019s degree in geographical sciences looking at the spruce budworm impact on balsam fir and black spruce regeneration, both at Laval University. After another year of studies in forestry and geomatics, she obtained her membership to the Ordre des Ing\u00e9nieurs Forestiers du Qu\u00e9bec (RPF for the province of Quebec). She had already been working as a student at the Laurentian Forestry Centre since her first undergraduate summer and switched to being a Forest Officer on forest soils, biomass and entomology in 2018. In 2021, she obtained her current position in wildfire research in Jonathan Boucher\u2019s team, which has kept her highly motivated ever since.","title":"Anne Cotton-Gagnon"},{"location":"contact/Chelene_Hanes/","text":"Fran\u00e7ais Chelene Hanes Wildland Fire Research Scientist Great Lakes Forestry Centre chelene.hanes@nrcan-rncan.gc.ca Firelab , ResearchGate , NRCan Dr Chelene Hanes is a prominent figure in wildland fire management, currently serving as a key expert at the Canadian Forest Service (CFS). With extensive experience in fire behavior research, fire weather, and drought impacts on wildfire activity, Chelene has made significant contributions to the understanding of how environmental factors influence fire regimes in Canada. Her work at the intersection of science and operational fire management has positioned her as a thought leader in promoting evidence-based practices for wildfire prevention and mitigation. Chelene's role at CFS includes advancing wildfire danger reduction strategies, collaborating with national and international partners, and contributing to major initiatives that address the increasing complexity of wildfire management in the context of climate change. Known for her strategic thinking and dedication to capacity building, she is deeply involved in efforts to develop tools and models within the Canadian Forest Fire Danger Rating System, the primary decision-making tool used by wildfire management Chelene lives in Sault Ste. Marie, Ontario with her husband and two daughters.","title":"Chelene Hanes"},{"location":"contact/Chelene_Hanes/#chelene-hanes","text":"Wildland Fire Research Scientist Great Lakes Forestry Centre chelene.hanes@nrcan-rncan.gc.ca Firelab , ResearchGate , NRCan Dr Chelene Hanes is a prominent figure in wildland fire management, currently serving as a key expert at the Canadian Forest Service (CFS). With extensive experience in fire behavior research, fire weather, and drought impacts on wildfire activity, Chelene has made significant contributions to the understanding of how environmental factors influence fire regimes in Canada. Her work at the intersection of science and operational fire management has positioned her as a thought leader in promoting evidence-based practices for wildfire prevention and mitigation. Chelene's role at CFS includes advancing wildfire danger reduction strategies, collaborating with national and international partners, and contributing to major initiatives that address the increasing complexity of wildfire management in the context of climate change. Known for her strategic thinking and dedication to capacity building, she is deeply involved in efforts to develop tools and models within the Canadian Forest Fire Danger Rating System, the primary decision-making tool used by wildfire management Chelene lives in Sault Ste. Marie, Ontario with her husband and two daughters.","title":"Chelene Hanes"},{"location":"contact/Gabrielle_Ayres/","text":"Fran\u00e7ais Gabrielle Ayres (she, her | elle, elle) Research Mobilization Analyst Great Lakes Forestry Centre gabrielle.ayres@nrcan-rncan.gc.ca NRCan Gabrielle is a research mobilization analyst with the Canadian Forest Service based out of the Great Lakes Forestry Centre in Sault Ste. Marie, Ontario. She has been contributing to the FWI2025 System delivery since July 2024, supporting Natasha Jurko, by assisting with the national roll-out, identifying effective ways to engage with agencies to support their needs, and creating documentation to facilitate uptake and implementation. Prior to this role, Gabrielle served as an Outreach Advisor for the Northeast Region at the Ontario Aviation, Forest Fire and Emergency Services (AFFES) branch, bringing over a decade of experience in fire management. Gabrielle holds a master\u2019s in education from the University of Ottawa and is proficient in both French and English. Her areas of expertise include knowledge exchange, communications, project management, and the creation of plain language documentation.","title":"Gabrielle Ayres"},{"location":"contact/Gabrielle_Ayres/#gabrielle-ayres","text":"(she, her | elle, elle) Research Mobilization Analyst Great Lakes Forestry Centre gabrielle.ayres@nrcan-rncan.gc.ca NRCan Gabrielle is a research mobilization analyst with the Canadian Forest Service based out of the Great Lakes Forestry Centre in Sault Ste. Marie, Ontario. She has been contributing to the FWI2025 System delivery since July 2024, supporting Natasha Jurko, by assisting with the national roll-out, identifying effective ways to engage with agencies to support their needs, and creating documentation to facilitate uptake and implementation. Prior to this role, Gabrielle served as an Outreach Advisor for the Northeast Region at the Ontario Aviation, Forest Fire and Emergency Services (AFFES) branch, bringing over a decade of experience in fire management. Gabrielle holds a master\u2019s in education from the University of Ottawa and is proficient in both French and English. Her areas of expertise include knowledge exchange, communications, project management, and the creation of plain language documentation.","title":"Gabrielle Ayres"},{"location":"contact/Jonathan_Boucher/","text":"Fran\u00e7ais Jonathan Boucher Ph.D (he, him | il, lui) Wildland Fire Research Scientist Laurentian Forestry Centre jonathan.boucher@nrcan-rncan.gc.ca ResearchGate Jonathan Boucher is a Wildland Fire Research Scientist with the Canadian Forest Service based out of the Laurentian Forestry Centre in Quebec city, Quebec. Jonathan develops scientific knowledge to support wildfire management and risk management activities. His research interests include fire behavior, fire risk, fuel attributes modelling, mitigation actions at the wildland urban interface, and suppression effectiveness. At the Canadian scale, he is a member of the scientific committee and operational committee of the Forest Mapping Program for Wildland Fire Resilience, and a member of the steering committee of the National Wildland Fire Risk Assessment Framework for Canada. In the fire danger group, he leads the fuels component of the next generation of the Canadian Forest Fire Danger Rating System. He also leads the Firehawk Project, a web platform that is a rapid risk assessor for wildfires in Canada. Some of the other projects he led or participated in are the development of FireLossRate, a framework and R package designed to estimate the proportion of lost structures associated with a wildfire event, wildland fire risk analysis for a military base, using optimization tools to identify optimal locations for the implementation of fuel treatment measures, and the Reference guide to the drop effectiveness of skimmer and rotary wing airtankers, among many others. Jonathan has done his undergraduate studies in forest management and environments (Laval University), his Master\u2019s degree in renewable resources on the impacts of post-fire salvage logging on beetles associated with wildfires in the boreal forest (UQAC), and his PhD in forestry science on characterizing fire severity as a management tool for post-fire management in the boreal forest (Laval University). He then worked from 2015 to 2019 at SOPFEU where he gained valuable knowledge on wildfire management and operations, before obtaining his current position at the CFS in 2019.","title":"Jonathan Boucher"},{"location":"contact/Jonathan_Boucher/#jonathan-boucher","text":"Ph.D (he, him | il, lui) Wildland Fire Research Scientist Laurentian Forestry Centre jonathan.boucher@nrcan-rncan.gc.ca ResearchGate Jonathan Boucher is a Wildland Fire Research Scientist with the Canadian Forest Service based out of the Laurentian Forestry Centre in Quebec city, Quebec. Jonathan develops scientific knowledge to support wildfire management and risk management activities. His research interests include fire behavior, fire risk, fuel attributes modelling, mitigation actions at the wildland urban interface, and suppression effectiveness. At the Canadian scale, he is a member of the scientific committee and operational committee of the Forest Mapping Program for Wildland Fire Resilience, and a member of the steering committee of the National Wildland Fire Risk Assessment Framework for Canada. In the fire danger group, he leads the fuels component of the next generation of the Canadian Forest Fire Danger Rating System. He also leads the Firehawk Project, a web platform that is a rapid risk assessor for wildfires in Canada. Some of the other projects he led or participated in are the development of FireLossRate, a framework and R package designed to estimate the proportion of lost structures associated with a wildfire event, wildland fire risk analysis for a military base, using optimization tools to identify optimal locations for the implementation of fuel treatment measures, and the Reference guide to the drop effectiveness of skimmer and rotary wing airtankers, among many others. Jonathan has done his undergraduate studies in forest management and environments (Laval University), his Master\u2019s degree in renewable resources on the impacts of post-fire salvage logging on beetles associated with wildfires in the boreal forest (UQAC), and his PhD in forestry science on characterizing fire severity as a management tool for post-fire management in the boreal forest (Laval University). He then worked from 2015 to 2019 at SOPFEU where he gained valuable knowledge on wildfire management and operations, before obtaining his current position at the CFS in 2019.","title":"Jonathan Boucher"},{"location":"contact/Kevin_Siu/","text":"Fran\u00e7ais Kevin Siu (he, him | il, lui) Fire Analyst Programmer Website Overseer Great Lakes Forestry Centre kevin.siu@nrcan-rncan.gc.ca NRCan Kevin is a Fire Analyst Programmer with the Canadian Forest Service based out of the Great Lakes Forestry Centre in Sault Ste. Marie, Ontario. He is working on various aspects of the Next Generation Canadian Forest Fire Danger Rating System (NG-CFFDRS) rollout. He is focused on analysis of fire danger outputs, code documentation, and the development of this website. Kevin's academic background is in math and physics, which has allowed him to follow his curiosity into many different research fields. He has experience from his undergraduate degree working in a quantum computing physics lab, an icebreaker ship engineering team, and a glaciology research group. He is excited to learn more about forest fires and environmental science while helping improve the tools for wildland fire managers.","title":"Kevin Siu"},{"location":"contact/Kevin_Siu/#kevin-siu","text":"(he, him | il, lui) Fire Analyst Programmer Website Overseer Great Lakes Forestry Centre kevin.siu@nrcan-rncan.gc.ca NRCan Kevin is a Fire Analyst Programmer with the Canadian Forest Service based out of the Great Lakes Forestry Centre in Sault Ste. Marie, Ontario. He is working on various aspects of the Next Generation Canadian Forest Fire Danger Rating System (NG-CFFDRS) rollout. He is focused on analysis of fire danger outputs, code documentation, and the development of this website. Kevin's academic background is in math and physics, which has allowed him to follow his curiosity into many different research fields. He has experience from his undergraduate degree working in a quantum computing physics lab, an icebreaker ship engineering team, and a glaciology research group. He is excited to learn more about forest fires and environmental science while helping improve the tools for wildland fire managers.","title":"Kevin Siu"},{"location":"contact/Patrick_Deane/","text":"Fran\u00e7ais Patrick Deane (he, him | il, lui) Forest Fire Research Specialist Great Lakes Forestry Centre patrick.deane@nrcan-rncan.gc.ca NRCan Patrick is a Forest Fire Research Specialist with the Canadian Forest Service based out of the Great Lakes Forestry Centre in Sault Ste. Marie, Ontario. Patrick works closely with Dr Chelene Hanes, supporting her research on fire behavior, fire weather, and drought impacts on wildfire activity. In addition to collaborating with fellow researchers, Patrick often works directly with operational fire management staff to implement research practices to aid in decision-making. Patrick is heavily involved in the collection of field data, including setup and maintenance of environmental stations, as well as data management and analysis that contribute towards tools and models within the Canadian Forest Fire Danger Rating System. Prior to starting with the Canadian Forest Service, Patrick attended McMaster University where his graduate research focused on ecohydrological approaches to fuel management in peatland ecosystems in the boreal region of Alberta. Patrick also spent two seasons as a wildland firefighter in Alberta. These experiences continue to provide important context and inform his research activities.","title":"Patrick Deane"},{"location":"contact/Patrick_Deane/#patrick-deane","text":"(he, him | il, lui) Forest Fire Research Specialist Great Lakes Forestry Centre patrick.deane@nrcan-rncan.gc.ca NRCan Patrick is a Forest Fire Research Specialist with the Canadian Forest Service based out of the Great Lakes Forestry Centre in Sault Ste. Marie, Ontario. Patrick works closely with Dr Chelene Hanes, supporting her research on fire behavior, fire weather, and drought impacts on wildfire activity. In addition to collaborating with fellow researchers, Patrick often works directly with operational fire management staff to implement research practices to aid in decision-making. Patrick is heavily involved in the collection of field data, including setup and maintenance of environmental stations, as well as data management and analysis that contribute towards tools and models within the Canadian Forest Fire Danger Rating System. Prior to starting with the Canadian Forest Service, Patrick attended McMaster University where his graduate research focused on ecohydrological approaches to fuel management in peatland ecosystems in the boreal region of Alberta. Patrick also spent two seasons as a wildland firefighter in Alberta. These experiences continue to provide important context and inform his research activities.","title":"Patrick Deane"}]}